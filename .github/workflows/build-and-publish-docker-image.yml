on:
  workflow_call:
    inputs:
      context-path:
        description: 'The context used to generate the Docker image'
        required: true
        type: string
      image-name:
        description: 'Name of the Docker image. It will appended to the repo name'
        required: true
        type: string

jobs:
  docker_image:
    name: 'Build ${{ inputs.image-name }} Docker image'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-${{ inputs.image-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Transform GitHub Actions metadata to Docker image tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.vendor=GeoNetwork
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') || !startsWith(github.ref, 'refs/tags/0.') }}
            type=raw,value={{branch}}-{{sha}},enable=${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ inputs.context-path }}/Dockerfile
          build-args: |
            MODULE=${{ inputs.context-path }}

          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}